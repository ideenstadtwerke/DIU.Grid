prototype(DIU.Grid:Content.Structure.Grid.Column.Two) < prototype(Neos.Neos:ContentComponent) {

    renderer = DIU.Grid:Components.Molecule.Grid.Column.Two {

        classNames = Neos.Fusion:Join {
            @glue = ' '
            addTopSpacingMobile = ${q(node).property('addTopSpacingMobile') ? q(node).property('addTopSpacingMobile') : ''}
            addTopSpacingTablet = ${q(node).property('addTopSpacingTablet') ? q(node).property('addTopSpacingTablet') : ''}
            addTopSpacingDesktop = ${q(node).property('addTopSpacingDesktop') ? q(node).property('addTopSpacingDesktop') : ''}
            addBottomSpacingMobile = ${q(node).property('addBottomSpacingMobile') ? q(node).property('addBottomSpacingMobile') : ''}
            addBottomSpacingTablet = ${q(node).property('addBottomSpacingTablet') ? q(node).property('addBottomSpacingTablet') : ''}
            addBottomSpacingDesktop = ${q(node).property('addBottomSpacingDesktop') ? q(node).property('addBottomSpacingDesktop') : ''}
        }
        classNames.@process.trim = ${String.trim(value)}

        #nodeProperties = ${q(node).property('addBottomSpacingDesktop')}
        #nodeProperties.@process.debug = Neos.Fusion:Debug


        @context.desktopLayout = ${String.split(q(node).property('desktopLayout'), '-')}
        @context.mobileLayout = ${String.split(q(node).property('mobileLayout'), '-')}
        @context.tabletLayout = ${String.split(q(node).property('tabletLayout'), '-')}


        column0 = ${q(node).children('column0').get(0)}
        column1 = ${q(node).children('column1').get(0)}

        alignment0 = ${q(node).children('column0').property('alignment') ? 'diu-grid-alignment-' +q(node).children('column0').property('alignment') : ''}
        alignment1 = ${q(node).children('column1').property('alignment') ? 'diu-grid-alignment-' +q(node).children('column1').property('alignment') : ''}

        columnData = Neos.Fusion:DataStructure{
            xs = Neos.Fusion:DataStructure {
                offset = ${mobileLayout[0]}
                col0 = ${mobileLayout[1]}
                col1 = ${mobileLayout[2]}
            }
            md = Neos.Fusion:DataStructure {
                offset = ${tabletLayout[0]}
                col0 = ${tabletLayout[1]}
                col1 = ${tabletLayout[2]}
            }
            lg = Neos.Fusion:DataStructure {
                offset = ${desktopLayout[0]}
                col0 = ${desktopLayout[1]}
                col1 = ${desktopLayout[2]}
            }
        }

        columnWidth0 = ${DIU.Grid.assembleClassNames(this.columnData, 0)}
        columnWidth1 = ${DIU.Grid.assembleClassNames(this.columnData, 1)}

        color0 = ${q(node).children('column0').property('color') ? 'bg-color-' + q(node).children('column0').property('color') : ''}
        color1 = ${q(node).children('column1').property('color') ? 'bg-color-' + q(node).children('column1').property('color') : ''}

        bgImagePath0 = Neos.Neos:ImageUri {
            asset = ${q(node).children('column0').property('backgroundImage')}
            @if.hasAsset = ${q(node).children('column0').property('backgroundImage') ? true : false}
        }

        bgImagePath1 = Neos.Neos:ImageUri {
            asset = ${q(node).children('column1').property('backgroundImage')}
            @if.hasAsset = ${q(node).children('column1').property('backgroundImage') ? true : false}
        }

        @if.visable = ${q(node).property('_hidden') == false ? true : false || node.context.inBackend}
    }

}
