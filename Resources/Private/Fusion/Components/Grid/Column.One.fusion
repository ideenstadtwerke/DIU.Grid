prototype(DIU.Grid:Content.Structure.Grid.Column.One) < prototype(Neos.Neos:ContentComponent) {

    @context.col0 = ${q(node).children().get(0)['identifier']}

    renderer = DIU.Grid:Components.Molecule.Grid.Column.One {

        classNames = Neos.Fusion:Join {
            @glue = ' '
            addTopSpacingMobile = ${q(node).property('addTopSpacingMobile') ? q(node).property('addTopSpacingMobile') : ''}
            addTopSpacingTablet = ${q(node).property('addTopSpacingTablet') ? q(node).property('addTopSpacingTablet') : ''}
            addTopSpacingDesktop = ${q(node).property('addTopSpacingDesktop') ? q(node).property('addTopSpacingDesktop') : ''}
            addBottomSpacingMobile = ${q(node).property('addBottomSpacingMobile') ? q(node).property('addBottomSpacingMobile') : ''}
            addBottomSpacingTablet = ${q(node).property('addBottomSpacingTablet') ? q(node).property('addBottomSpacingTablet') : ''}
            addBottomSpacingDesktop = ${q(node).property('addBottomSpacingDesktop') ? q(node).property('addBottomSpacingDesktop') : ''}
        }
        classNames.@process.trim = ${String.trim(value)}

        @context.desktopLayout = ${String.split(q(node).property('desktopLayout'), "-")}
        @context.mobileLayout = ${String.split(q(node).property('mobileLayout'), "-")}
        @context.tabletLayout = ${String.split(q(node).property('tabletLayout'), "-")}



        column0 = ${q(node).children('column0').get(0)}

        columnData = Neos.Fusion:DataStructure{
            xs = Neos.Fusion:DataStructure {
                offset = ${mobileLayout[0] / 2}
                col0 = ${mobileLayout[1]}
            }
            md = Neos.Fusion:DataStructure {
                offset = ${tabletLayout[0] / 2}
                col0 = ${tabletLayout[1]}
            }
            lg = Neos.Fusion:DataStructure {
                offset = ${desktopLayout[0] / 2}
                col0 = ${desktopLayout[1]}
            }
        }

        columnWidth0 = ${DIU.Grid.assembleClassNames(this.columnData, 0)}

        color0 = ${q(node).children('column0').property('color') ? 'bg-color-' + q(node).children('column0').property('color') : ''}

        bgImagePath0 = Neos.Neos:ImageUri {
            asset = ${q(node).children('column0').property('backgroundImage')}
            @if.hasAsset = ${q(node).children('column0').property('backgroundImage') ? true : false}
        }

        @if.visable = ${q(node).property('_hidden') == false ? true : false || node.context.inBackend}
    }

}
